name: Tag and publish to NuGet

on:
  workflow_dispatch:
    inputs:
      major:
        description: 'Major version'
        required: true
        default: '1'
      minor:
        description: 'Minor version'
        required: true
        default: '0'
      patch:
        description: 'Patch version'
        required: true
        default: '0'

jobs:
  checkout:
    runs-on: ubuntu-latest
    outputs:
      new_tag: ${{ steps.create_tag.outputs.new_tag }}
    steps:
      - name: Check out repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Get the latest tag
        id: get_tag
        run: echo "::set-output name=TAG::$(git describe --tags --abbrev=0)"

      - name: Create new tag
        id: create_tag
        run: |
          MAJOR=${{ github.event.inputs.major }}
          MINOR=${{ github.event.inputs.minor }}
          PATCH=${{ github.event.inputs.patch }}
          NEW_TAG="${MAJOR}.${MINOR}.${PATCH}"
          echo "NEW_TAG=$NEW_TAG" >> $GITHUB_ENV
          echo "::set-output name=new_tag::$NEW_TAG"
          git tag $NEW_TAG
          git push origin $NEW_TAG

  setup_dotnet:
    runs-on: ubuntu-latest
    needs: checkout
    steps:
      - name: Set up .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.0.x'

  build:
    runs-on: ubuntu-latest
    needs: [checkout, setup_dotnet]
    steps:
      - name: Restore dependencies
        run: dotnet restore

      - name: Build solution
        run: dotnet build --configuration Release --no-restore

  test:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Run tests
        run: dotnet test --configuration Release --no-build --verbosity normal

  pack_and_publish:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Pack and publish to NuGet
        run: dotnet pack ASureBus.Abstractions/ASureBus.Abstractions.csproj --configuration Release --output ./artifacts /p:PackageVersion=${{ needs.checkout.outputs.new_tag }}